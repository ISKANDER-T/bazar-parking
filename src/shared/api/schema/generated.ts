/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Index */
        get: operations["index_api_v1__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login User */
        post: operations["login_user_api_v1_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logout User */
        post: operations["logout_user_api_v1_auth_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Refresh Access Token */
        post: operations["refresh_access_token_api_v1_auth_refresh_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Me */
        get: operations["get_me_api_v1_users_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/persons": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Person */
        post: operations["create_person_api_v1_persons_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/persons/get_by_id/{person_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Person By Id */
        get: operations["get_person_by_id_api_v1_persons_get_by_id__person_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/persons/get_all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Persons */
        get: operations["get_persons_api_v1_persons_get_all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/persons/get_excel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Persons Excel */
        get: operations["get_persons_excel_api_v1_persons_get_excel_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/persons/delete/{person_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Person */
        delete: operations["delete_person_api_v1_persons_delete__person_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/persons/update/{person_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Person */
        put: operations["update_person_api_v1_persons_update__person_id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/persons/search/{search}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Search Persons */
        get: operations["search_persons_api_v1_persons_search__search__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/departments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Department */
        post: operations["create_department_api_v1_departments_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/departments/get_all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Departments */
        get: operations["get_departments_api_v1_departments_get_all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/roles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Role */
        post: operations["create_role_api_v1_roles_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/roles/get_all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Roles */
        get: operations["get_roles_api_v1_roles_get_all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Body_create_person_api_v1_persons_post */
        Body_create_person_api_v1_persons_post: {
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Department Id */
            department_id: number;
            /**
             * Image
             * Format: binary
             */
            image: string;
        };
        /** DataResponse[DepartmentRead] */
        DataResponse_DepartmentRead_: {
            data: components["schemas"]["DepartmentRead"];
        };
        /** DataResponse[PersonFullRead] */
        DataResponse_PersonFullRead_: {
            data: components["schemas"]["PersonFullRead"];
        };
        /** DataResponse[PersonRead] */
        DataResponse_PersonRead_: {
            data: components["schemas"]["PersonRead"];
        };
        /** DataResponse[RoleRead] */
        DataResponse_RoleRead_: {
            data: components["schemas"]["RoleRead"];
        };
        /** DataResponse[TokenInfo] */
        DataResponse_TokenInfo_: {
            data: components["schemas"]["TokenInfo"];
        };
        /** DataResponse[UserRead] */
        DataResponse_UserRead_: {
            data: components["schemas"]["UserRead"];
        };
        /** DataResponse[int] */
        DataResponse_int_: {
            /** Data */
            data: number;
        };
        /** DepartmentCreate */
        DepartmentCreate: {
            /** Name */
            name: string;
            /** Role Id */
            role_id: number;
        };
        /** DepartmentRead */
        DepartmentRead: {
            /** Name */
            name: string;
            /** Id */
            id: number;
            /** Role Id */
            role_id: number;
        };
        /** DepartmentReadWithCount */
        DepartmentReadWithCount: {
            /** Name */
            name: string;
            /** Id */
            id: number;
            /** Role Id */
            role_id: number;
            /** Count */
            count: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** ListResponse[PersonFullRead] */
        ListResponse_PersonFullRead_: {
            /** Data */
            data: components["schemas"]["PersonFullRead"][];
            /** Total */
            total: number;
        };
        /** ListResponse[RoleRead] */
        ListResponse_RoleRead_: {
            /** Data */
            data: components["schemas"]["RoleRead"][];
            /** Total */
            total: number;
        };
        /** LoginViaPhone */
        LoginViaPhone: {
            /** Phone Number */
            phone_number: string;
            /** Password */
            password: string;
        };
        /** PaginatedListResponse[DepartmentReadWithCount] */
        PaginatedListResponse_DepartmentReadWithCount_: {
            /** Data */
            data: components["schemas"]["DepartmentReadWithCount"][];
            pagination: components["schemas"]["Pagination"];
        };
        /** PaginatedListResponse[PersonRead] */
        PaginatedListResponse_PersonRead_: {
            /** Data */
            data: components["schemas"]["PersonRead"][];
            pagination: components["schemas"]["Pagination"];
        };
        /** Pagination */
        Pagination: {
            /** Page */
            page?: number | null;
            /** Items Per Page */
            items_per_page?: number | null;
            /** Total */
            total?: number | null;
            /** Total Pages */
            total_pages?: number | null;
        };
        /** PersonFullRead */
        PersonFullRead: {
            /** Id */
            id: number;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Image Url */
            image_url: string;
            department: components["schemas"]["DepartmentRead"];
            role: components["schemas"]["RoleRead"];
        };
        /** PersonRead */
        PersonRead: {
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Image Url */
            image_url: string;
            /** Department Id */
            department_id: number;
            /** Id */
            id: number;
        };
        /** PersonUpdate */
        PersonUpdate: {
            /** First Name */
            first_name?: string | null;
            /** Last Name */
            last_name?: string | null;
            /** Image Url */
            image_url?: string | null;
            /** Department Id */
            department_id?: number | null;
        };
        /** RefreshToken */
        RefreshToken: {
            /** Refresh Token */
            refresh_token?: string | null;
        };
        /** RoleCreate */
        RoleCreate: {
            /** Name */
            name: string;
        };
        /** RoleRead */
        RoleRead: {
            /** Name */
            name: string;
            /** Id */
            id: number;
        };
        /** TokenInfo */
        TokenInfo: {
            /** Access Token */
            access_token: string;
            /** Refresh Token */
            refresh_token?: string | null;
            /**
             * Token Type
             * @default Bearer
             */
            token_type: string;
        };
        /** UserRead */
        UserRead: {
            /** Name */
            name: string;
            /** Email */
            email?: string | null;
            /** Phone Number */
            phone_number: string;
            /** Image Url */
            image_url: string;
            /**
             * Is Superuser
             * @default false
             */
            is_superuser: boolean;
            /**
             * Is Verified
             * @default false
             */
            is_verified: boolean;
            /**
             * Is Active
             * @default false
             */
            is_active: boolean;
            /** Tier Id */
            tier_id?: number | null;
            /** Id */
            id: number;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    index_api_v1__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    login_user_api_v1_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginViaPhone"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DataResponse_TokenInfo_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    logout_user_api_v1_auth_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RefreshToken"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_access_token_api_v1_auth_refresh_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RefreshToken"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DataResponse_TokenInfo_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_me_api_v1_users_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DataResponse_UserRead_"];
                };
            };
        };
    };
    create_person_api_v1_persons_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_create_person_api_v1_persons_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DataResponse_PersonRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_person_by_id_api_v1_persons_get_by_id__person_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                person_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DataResponse_PersonFullRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_persons_api_v1_persons_get_all_get: {
        parameters: {
            query?: {
                department_id?: number | null;
                page?: number;
                page_size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedListResponse_PersonRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_persons_excel_api_v1_persons_get_excel_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    delete_person_api_v1_persons_delete__person_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                person_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DataResponse_int_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_person_api_v1_persons_update__person_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                person_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PersonUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DataResponse_PersonRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    search_persons_api_v1_persons_search__search__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                search: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ListResponse_PersonFullRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_department_api_v1_departments_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DepartmentCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DataResponse_DepartmentRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_departments_api_v1_departments_get_all_get: {
        parameters: {
            query?: {
                role_id?: number | null;
                page?: number;
                page_size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedListResponse_DepartmentReadWithCount_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_role_api_v1_roles_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RoleCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DataResponse_RoleRead_"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_roles_api_v1_roles_get_all_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ListResponse_RoleRead_"];
                };
            };
        };
    };
}
